@model LanguageMakerWebProject.Models.LetterTypeModel

@{
    ViewBag.Title = "LetterTypes";
}

<h2>Letter Types</h2>

<p class="lead">
    Letter types are required to create words, as they will be used in word patterns.
    Each letter type must be assigned a distinct pattern, which will be used to create word patterns.
    Finally, words will be generated based on word patterns.
</p>

<p class="lead">
    So for example, if we have two letter types, "vowel" with pattern 'v' and "consonant" with pattern 'c', we can specify these patterns:
</p>
<p class="lead">
    'v', 'c v', 'd v', 'v c', 'v d', 'v c d', 'c v d', etc.
</p>

@if (Session["Alert LetterTypes M1"] != null)
{
    <div class="alert-dismissable" role="alert">@Session["Alert LetterTypes M1"]</div>
}

@{
    List<LanguageMakerWebProject.Models.LetterTypeModel> lettertypes = (List<LanguageMakerWebProject.Models.LetterTypeModel>)Session["Letter Types"];
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Pattern)
            </th>
            <th></th>
        </tr>

        @foreach (var lettertype in lettertypes)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => lettertype.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => lettertype.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => lettertype.Pattern)
                </td>
                <td>
                    @Html.ActionLink("Edit", "EditLetterType", "Language")
                </td>
                <td>
                    @Html.ActionLink("Remove", "RemoveLetterType", new { lettertype.Id })
                </td>
            </tr>
        }
    </table>

    <div class="form-horizontal">
        <h4>LetterTypeModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                @if (Session["Alert LetterTypes M2"] != null)
                {
                    <div class="alert-warning" role="alert">@Session["Alert LetterTypes M2"]</div>
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Pattern, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Pattern, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Pattern, "", new { @class = "text-danger" })
                @if (Session["Alert LetterTypes M3"] != null)
                {
                    <div class="alert-warning" role="alert">@Session["Alert LetterTypes M3"]</div>
                }
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add Letter Type" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Continue Setup", "Index", "Language")
</div>
